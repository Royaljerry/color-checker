// ****************************************************************
// TYPES
// ****************************************************************

interface Data {
	colors: Color[];
}

type ColorType = 'light' | 'dark';

interface Color {
	name: string;
	valueHex: string;
	type: ColorType;
	include?: boolean;
}

// ****************************************************************
// VARIABLES
// ****************************************************************

let CC_DATA: any = {};
let CC_COLORS: any;

// ****************************************************************
// FUNCTIONS
// ****************************************************************

function getNumberOfParts(colors: Color[]): number {
	return Object.entries(colors).filter(([key, value]) => {
		return value.include !== false;
	}).length;
}

// ================================================
// Helpers
// ================================================

// ================================================
// Handlers
// ================================================

// ================================================
// Factories
// ================================================

// ================================================
// Initializers
// ================================================

// ================================================
// Updaters
// ================================================

// ****************************************************************
// MAIN ENTRY POINT
// ****************************************************************

function start() {
	fetch('./data.json')
		.then(response => response.json())
		.then(data => CC_DATA = data)
		.then(() => console.log(CC_DATA.colors[0].name))
		.then(() => console.log(getNumberOfParts(CC_DATA.colors)))
}

start();
